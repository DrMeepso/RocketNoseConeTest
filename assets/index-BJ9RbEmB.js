var b=Object.defineProperty;var E=(s,r,t)=>r in s?b(s,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[r]=t;var p=(s,r,t)=>E(s,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const l of a.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function t(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(e){if(e.ep)return;e.ep=!0;const a=t(e);fetch(e.href,a)}})();class d{constructor(r,t,n,e=!1){p(this,"name");p(this,"description1");p(this,"description2");p(this,"clippable");this.name=r,this.description1=t,this.description2=n,this.clippable=e}usesParameter(){return!1}defaultParameter(){return 0}maxParameter(){return 1}}const i=s=>s*s,A=s=>s*s*s,u=s=>s>=0?Math.sqrt(s):0;class v extends d{constructor(){super("Conical","A conical nose cone has a profile of a triangle.","A conical transition has straight sides.")}getRadius(r,t,n,e){return t*r/n}}class R extends d{constructor(){super("Ogive","An ogive nose cone has a profile that is a segment of a circle...","An ogive transition has a profile that is a segment of a circle...")}usesParameter(){return!0}defaultParameter(){return 1}getRadius(r,t,n,e){if(n<t&&(r=r*t/n,n=t),e<1e-9)return new v().getRadius(r,t,n,e);const a=u((i(n)+i(t))*(i((2-e)*n)+i(e*t))/(4*i(e*t))),l=n/e,S=u(i(a)-i(l));return u(i(a)-i(l-r))-S}}class I extends d{constructor(){super("Ellipsoid","An ellipsoidal nose cone has a profile of a half-ellipse...","An ellipsoidal transition has a profile of a half-ellipse...",!0)}getRadius(r,t,n,e){return r=r*t/n,u(2*t*r-i(r))}}class L extends d{constructor(){super("Power series","A power series nose cone description...","A power series transition description...",!0)}usesParameter(){return!0}defaultParameter(){return .5}getRadius(r,t,n,e){return e<=1e-5?r<=1e-5?0:t:t*Math.pow(r/n,e)}}class O extends d{constructor(){super("Parabolic series","A parabolic series nose cone description...","A parabolic series transition description...")}usesParameter(){return!0}defaultParameter(){return 1}getRadius(r,t,n,e){return t*((2*r/n-e*i(r/n))/(2-e))}}class k extends d{constructor(){super("Haack series","A Haack series nose cone description...","A Haack series transition description...",!0)}usesParameter(){return!0}maxParameter(){return 1/3}getRadius(r,t,n,e){const a=Math.acos(1-2*r/n);return e===0?t*u((a-Math.sin(2*a)/2)/Math.PI):t*u((a-Math.sin(2*a)/2+e*A(Math.sin(a)))/Math.PI)}}const g={Conical:new v,Ogive:new R,Ellipsoid:new I,Power:new L,Parabolic:new O,Haack:new k},c=document.getElementById("canvas"),o=c.getContext("2d");c.width=500;c.height=500;const P=document.getElementById("dropdown"),f=document.getElementById("nosePram"),w=document.getElementById("noseLength"),y=document.getElementById("noseRadius");for(let s=0;s<Object.values(g).length;s++){let r=Object.keys(g)[s],t=document.createElement("option");t.value=r,t.text=r,P.appendChild(t)}let m=Object.values(g)[1];P.addEventListener("change",function(){m=g[P.value],f.max=m.maxParameter().toString(),f.value=m.defaultParameter().toString(),h()});f.addEventListener("input",function(){console.log(f.value),h()});w.addEventListener("input",function(){h()});y.addEventListener("input",function(){h()});function h(){o.fillStyle="white",o.clearRect(0,0,c.width,c.height),o.fillRect(0,0,c.width,c.height),o.save(),o.translate(c.width/2,c.height/2);let s=m,r=parseFloat(f.value),t=parseInt(w.value),n=parseInt(y.value);o.strokeStyle="black",o.beginPath();for(let e=0;e<=t;e+=1){let a=s.getRadius(e,n,t,r);o.lineTo(e-t/2,-a)}o.stroke(),o.strokeStyle="blue",o.beginPath();for(let e=0;e<=t;e+=1){let a=s.getRadius(e,n,t,r);o.lineTo(e-t/2,a)}o.stroke(),o.strokeStyle="black",o.beginPath(),o.moveTo(t/2,n),o.lineTo(t/2,-n),o.stroke(),o.strokeStyle="red",o.setLineDash([5,5]),o.beginPath(),o.moveTo(t/2+10,0),o.lineTo(-t/2-10,0),o.stroke(),o.restore()}h();
