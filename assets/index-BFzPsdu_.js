var v=Object.defineProperty;var y=(s,t,r)=>t in s?v(s,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[t]=r;var p=(s,t,r)=>y(s,typeof t!="symbol"?t+"":t,r);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function r(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(e){if(e.ep)return;e.ep=!0;const o=r(e);fetch(e.href,o)}})();class d{constructor(t,r,n,e=!1){p(this,"name");p(this,"description1");p(this,"description2");p(this,"clippable");this.name=t,this.description1=r,this.description2=n,this.clippable=e}usesParameter(){return!1}defaultParameter(){return 0}maxParameter(){return 1}}const i=s=>s*s,b=s=>s*s*s,u=s=>s>=0?Math.sqrt(s):0;class P extends d{constructor(){super("Conical","A conical nose cone has a profile of a triangle.","A conical transition has straight sides.")}getRadius(t,r,n,e){return r*t/n}}class A extends d{constructor(){super("Ogive","An ogive nose cone has a profile that is a segment of a circle...","An ogive transition has a profile that is a segment of a circle...")}usesParameter(){return!0}defaultParameter(){return 1}getRadius(t,r,n,e){if(n<r&&(t=t*r/n,n=r),e<1e-9)return new P().getRadius(t,r,n,e);const o=u((i(n)+i(r))*(i((2-e)*n)+i(e*r))/(4*i(e*r))),l=n/e,S=u(i(o)-i(l));return u(i(o)-i(l-t))-S}}class O extends d{constructor(){super("Ellipsoid","An ellipsoidal nose cone has a profile of a half-ellipse...","An ellipsoidal transition has a profile of a half-ellipse...",!0)}getRadius(t,r,n,e){return t=t*r/n,u(2*r*t-i(t))}}class R extends d{constructor(){super("Power series","A power series nose cone description...","A power series transition description...",!0)}usesParameter(){return!0}defaultParameter(){return .5}getRadius(t,r,n,e){return e<=1e-5?t<=1e-5?0:r:r*Math.pow(t/n,e)}}class E extends d{constructor(){super("Parabolic series","A parabolic series nose cone description...","A parabolic series transition description...")}usesParameter(){return!0}defaultParameter(){return 1}getRadius(t,r,n,e){return r*((2*t/n-e*i(t/n))/(2-e))}}class M extends d{constructor(){super("Haack series","A Haack series nose cone description...","A Haack series transition description...",!0)}usesParameter(){return!0}maxParameter(){return 1/3}getRadius(t,r,n,e){const o=Math.acos(1-2*t/n);return e===0?r*u((o-Math.sin(2*o)/2)/Math.PI):r*u((o-Math.sin(2*o)/2+e*b(Math.sin(o)))/Math.PI)}}const m={Conical:new P,Ogive:new A,Ellipsoid:new O,Power:new R,Parabolic:new E,Haack:new M},c=document.getElementById("canvas"),a=c.getContext("2d");c.width=500;c.height=500;const g=document.getElementById("dropdown"),f=document.getElementById("nosePram");for(let s=0;s<Object.values(m).length;s++){let t=Object.keys(m)[s],r=document.createElement("option");r.value=t,r.text=t,g.appendChild(r)}let h=Object.values(m)[1];g.addEventListener("change",function(){h=m[g.value],f.max=h.maxParameter().toString(),f.value=h.defaultParameter().toString(),w()});f.addEventListener("input",function(){console.log(f.value),w()});function w(){a.fillStyle="white",a.clearRect(0,0,c.width,c.height),a.fillRect(0,0,c.width,c.height),a.save(),a.translate(c.width/2,c.height/2);let s=h,t=parseFloat(f.value),r=200,n=50;a.fillStyle="red",a.beginPath(),a.arc(0,0,2,0,2*Math.PI),a.fill(),a.strokeStyle="black",a.beginPath();for(let e=0;e<=r;e+=1){let o=s.getRadius(e,n,r,t);a.lineTo(e,-o)}a.stroke(),a.strokeStyle="blue",a.beginPath();for(let e=0;e<=r;e+=1){let o=s.getRadius(e,n,r,t);a.lineTo(e,o)}a.stroke(),a.restore()}
